{"ast":null,"code":"/* GENERATED FILE */\nimport React, { useContext, useMemo } from 'react';\nimport { IconContext } from '../lib';\nimport bold from '../bold/ShoppingBag';\nimport duotone from '../duotone/ShoppingBag';\nimport fill from '../fill/ShoppingBag';\nimport light from '../light/ShoppingBag';\nimport regular from '../regular/ShoppingBag';\nimport thin from '../thin/ShoppingBag';\n\nfunction ShoppingBag(_ref) {\n  let {\n    weight,\n    color,\n    size,\n    style,\n    mirrored\n  } = _ref;\n  const {\n    color: contextColor = '#000',\n    size: contextSize = 24,\n    weight: contextWeight = 'regular',\n    mirrored: contextMirrored = false,\n    style: contextStyle\n  } = useContext(IconContext);\n  const IconComponent = useMemo(() => {\n    const iconWeight = weight !== null && weight !== void 0 ? weight : contextWeight;\n    const weightMap = {\n      bold,\n      duotone,\n      fill,\n      light,\n      regular,\n      thin\n    };\n    return weightMap[iconWeight];\n  }, [weight, contextWeight]);\n  const mirroredValue = mirrored !== null && mirrored !== void 0 ? mirrored : contextMirrored;\n  return /*#__PURE__*/React.createElement(IconComponent, {\n    color: color !== null && color !== void 0 ? color : contextColor,\n    size: size !== null && size !== void 0 ? size : contextSize,\n    style: { ...contextStyle,\n      ...style,\n      ...(mirroredValue && {\n        transform: [{\n          scaleX: -1\n        }]\n      })\n    }\n  });\n}\n\nexport default ShoppingBag;","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAAoBC,WAApB,QAAuC,QAAvC;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,SAASC,WAAT,OAA0E;EAAA,IAArD;IAAEC,MAAF;IAAUC,KAAV;IAAiBC,IAAjB;IAAuBC,KAAvB;IAA8BC;EAA9B,CAAqD;EACxE,MAAM;IACJH,KAAK,EAAEI,YAAY,GAAG,MADlB;IAEJH,IAAI,EAAEI,WAAW,GAAG,EAFhB;IAGJN,MAAM,EAAEO,aAAa,GAAG,SAHpB;IAIJH,QAAQ,EAAEI,eAAe,GAAG,KAJxB;IAKJL,KAAK,EAAEM;EALH,IAMFnB,UAAU,CAACE,WAAD,CANd;EAQA,MAAMkB,aAAa,GAAGnB,OAAO,CAAC,MAAM;IAClC,MAAMoB,UAAU,GAAGX,MAAH,SAAGA,UAAH,WAAGA,YAAUO,aAA7B;IAEA,MAAMK,SAAS,GAAG;MAChBnB,IADgB;MAEhBC,OAFgB;MAGhBC,IAHgB;MAIhBC,KAJgB;MAKhBC,OALgB;MAMhBC;IANgB,CAAlB;IASA,OAAOc,SAAS,CAACD,UAAD,CAAhB;EAZ2B,GAa1B,CAACX,MAAD,EAASO,aAAT,CAb0B,CAA7B;EAeA,MAAMM,aAAa,GAAGT,QAAH,SAAGA,YAAH,WAAGA,cAAYI,eAAlC;EAEA,oBACEnB,oBAACqB,aAAD;IACET,KAAK,EAAEA,KAAF,SAAEA,SAAF,WAAEA,WAASI,YADlB;IAEEH,IAAI,EAAEA,IAAF,SAAEA,QAAF,WAAEA,UAAQI,WAFhB;IAGEH,KAAK,EAAE,EACL,GAAGM,YADE;MAEL,GAAGN,KAFE;MAGL,IAAIU,aAAa,IAAI;QACnBC,SAAS,EAAE,CAAC;UAAEC,MAAM,EAAE,CAAC;QAAX,CAAD;MADQ,CAArB;IAHK;EAHT,EADF;AAaD;;AAED,eAAehB,WAAf","names":["React","useContext","useMemo","IconContext","bold","duotone","fill","light","regular","thin","ShoppingBag","weight","color","size","style","mirrored","contextColor","contextSize","contextWeight","contextMirrored","contextStyle","IconComponent","iconWeight","weightMap","mirroredValue","transform","scaleX"],"sources":["/Users/louie/Desktop/dacommunity.tv/dacommunity.tv/node_modules/phosphor-react-native/lib/module/icons/ShoppingBag.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { useContext, useMemo } from 'react';\nimport { IconProps, IconContext } from '../lib';\n\nimport bold from '../bold/ShoppingBag';\nimport duotone from '../duotone/ShoppingBag';\nimport fill from '../fill/ShoppingBag';\nimport light from '../light/ShoppingBag';\nimport regular from '../regular/ShoppingBag';\nimport thin from '../thin/ShoppingBag';\n\nfunction ShoppingBag({ weight, color, size, style, mirrored }: IconProps) {\n  const {\n    color: contextColor = '#000',\n    size: contextSize = 24,\n    weight: contextWeight = 'regular',\n    mirrored: contextMirrored = false,\n    style: contextStyle,\n  } = useContext(IconContext);\n\n  const IconComponent = useMemo(() => {\n    const iconWeight = weight ?? contextWeight;\n\n    const weightMap = {\n      bold,\n      duotone,\n      fill,\n      light,\n      regular,\n      thin,\n    };\n\n    return weightMap[iconWeight];\n  }, [weight, contextWeight]);\n\n  const mirroredValue = mirrored ?? contextMirrored;\n\n  return (\n    <IconComponent\n      color={color ?? contextColor}\n      size={size ?? contextSize}\n      style={{\n        ...contextStyle,\n        ...style,\n        ...(mirroredValue && {\n          transform: [{ scaleX: -1 }],\n        }),\n      }}\n    />\n  );\n}\n\nexport default ShoppingBag;\n"]},"metadata":{},"sourceType":"module"}